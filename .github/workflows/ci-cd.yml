name: CI/CD - Build e Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Passo 1: Clona o repositório da aplicação
      - name: Checkout do código da aplicação
        uses: actions/checkout@v4

      # Passo 2: DEBUG - Verifica o username que a Action está a ler
      - name: Debug - Verificar Username do Docker
        run: echo "A pipeline está a usar o username: '${{ secrets.DOCKER_USERNAME }}'"

      # Passo 3: Faz o login no Docker Hub
      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Passo 4: Constrói a imagem Docker e envia para o Docker Hub
      - name: Build e Push da Imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/meu-projeto-ci-cd:${{ github.sha }}

      # Passo 5: Clona o repositório de manifestos
      - name: Checkout do repositório de manifestos
        uses: actions/checkout@v4
        with:
          repository: MuriloPetri/meu-projeto-manifests
          token: ${{ secrets.GH_PAT }}
          path: manifests
      
      # Passo 6: Atualiza o ficheiro deployment.yaml
      - name: Atualizar a tag da imagem no deployment.yaml
        run: |
          cd manifests
          sed -i 's|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/meu-projeto-ci-cd:${{ github.sha }}|g' deployment.yaml

      # Passo 7: Faz o commit e push da alteração
      - name: Fazer commit e push da alteração no repositório de manifestos
        run: |
          cd manifests
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions-bot@github.com"
          git commit -am "CI: Atualiza a imagem da aplicação para o commit ${{ github.sha }}"
          git push
